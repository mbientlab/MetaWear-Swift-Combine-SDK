{"metadata":{"title":"Adding MetaWear to a Project","categoryPathComponent":"MetaWear","role":"project","category":"MetaWear"},"hierarchy":{"modules":[{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Discover-&-Connect","projects":[{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#Swift-Package-Manager"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#Add-MetaWear-and-MetaWearSync"}]},{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#List-nearby-devices"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#First-connection"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#Managing-known-devices"}]}]},{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Log-Sensor-Data","projects":[{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#Configure-logging-commands"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#Download-data"}]}]},{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Train-a-CoreML-Model","projects":[{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Training-Activity-Classification","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Training-Activity-Classification#Forthcoming"}]},{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Using-a-CoreML-Model","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Using-a-CoreML-Model#Forthcoming"}]}]}],"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear","paths":[["doc:\/\/MetaWear\/tutorials\/MetaWear","doc:\/\/MetaWear\/tutorials\/MetaWear\/$volume","doc:\/\/MetaWear\/tutorials\/MetaWear\/Discover-&-Connect"]]},"schemaVersion":{"major":0,"minor":2,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":", an app to capture and analyze motion sensor data."},{"type":"text","text":" "},{"type":"text","text":"You’ll start by adding the MetaWear SDK using Swift Package Manager and then link up dependencies."}]}],"estimatedTimeInMinutes":5,"title":"Adding MetaWear to a Project","image":"streamyIcon.png","chapter":"Discover & Connect","kind":"hero","backgroundImage":"streamyIcon.png","projectFiles":"Streamy.zip"},{"kind":"tasks","tasks":[{"anchor":"Swift-Package-Manager","title":"Swift Package Manager","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Our Combine SDK is available using Xcode’s native package dependency manager."}]}],"mediaPosition":"trailing","media":"bird-red.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the File menu, choose Add Package…"},{"type":"text","text":" "},{"type":"text","text":"https:\/\/github.com\/mbientlab\/MetaWear-Swift-Combine-SDK"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, Xcode will update the MetaWear package when minor versions are released, but not for a major release. You can also depend on a branch head or specific commits."}]}],"type":"step","runtimePreview":null,"media":"tut-AddPackage.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add all frameworks but Firmware to your Streamy target. (We won’t be updating device firmware.)"}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-AddPackageProducts.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes Xcode neglects to add those frameworks to a second app target. If they don’t appear, tap the + icon inside the "},{"type":"codeVoice","code":"Frameworks, Libraries and Embedded Content"},{"type":"text","text":" section."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-ManuallyAddProducts.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t forget to set the Info.plist Bluetooth privacy usage descriptions."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-Plist.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For macOS, ensure Bluetooth and CloudKit permissions are enabled."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-MacPermissions.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For iOS, these permissions are needed."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-iOSPermissions.png"}]},{"anchor":"Add-MetaWear-and-MetaWearSync","title":"Add MetaWear and MetaWearSync","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"MetaWear has three core classes: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWearScanner"},{"type":"text","text":", and "},{"type":"codeVoice","code":"MetaWearSyncStore"},{"type":"text","text":". When debugging, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger"},{"type":"text","text":" can visualize Bluetooth communications."}]}],"mediaPosition":"trailing","media":"bird-red-yellow.png"}],"stepsSection":[{"code":"01-root-01-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Streamy will house the scanner and sync store in a root object, which holds off any work that could produce UI updates until the first view appears."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWearScanner"},{"type":"text","text":" abstracts the CoreBluetooth framework for you, finding nearby "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear"},{"type":"text","text":" devices. The "},{"type":"codeVoice","code":".sharedRestore"},{"type":"text","text":" singleton enables CoreBluetooth to recognize this app and vend it previously used peripherals."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To persist names, capabilities, and other data about previously connected MetaWears, the scanner and other SDK components use UserDefaults storage."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can inspect the keys used and specify the container at "},{"type":"codeVoice","code":"UserDefaults.MetaWear.suite"},{"type":"text","text":". By default, the SDK uses "},{"type":"codeVoice","code":".standard"},{"type":"text","text":"."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Apple randomizes Bluetooth device identifiers between devices. That undermines syncing device-specific files and data between Apple machines."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"MetaWearSyncStore"},{"type":"text","text":" solves this by saving de-identifying metadata to iCloud key value storage, including a device’s name, serial number, and sensor capabilities. If using this SDK feature, use the "},{"type":"codeVoice","code":"MetaWearSyncStore"},{"type":"text","text":" exclusively to obtain and manage MetaWears, rather than the scanner. Otherwise, the saved data will become out-of-sync."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An iCloud key value store must be synchronized at launch to obtain the latest values."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When debugging, you might find the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger"},{"type":"text","text":" helpful. If you set "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger\/activateConsoleLoggingOnAllMetaWears"},{"type":"text","text":" to true, all MetaWears will report activities (e.g., Bluetooth packets) to the console in Debug mode."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also setup logging for individual MetaWears by assigning a delegate conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLoggerDelegate"},{"type":"text","text":"."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-02-07.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For brevity, this tutorial will skip UI-related code."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"See the Streamy repo for how "},{"type":"codeVoice","code":"Root"},{"type":"text","text":" and other aspects are handled in this barebones SwiftUI app."}]}],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Connecting to MetaWears","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}]}],"references":{"doc://MetaWear/documentation/MetaWear/MetaWear":{"role":"symbol","title":"MetaWear","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaWear"}],"abstract":[{"type":"text","text":"Each MetaWear object corresponds a physical MetaWear board. This SDK"},{"type":"text","text":" "},{"type":"text","text":"wraps type-safe Swift methods and Combine publishers around C\/C++ functions"},{"type":"text","text":" "},{"type":"text","text":"and CoreBluetooth APIs so you can get started quickly."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetaWear"}],"url":"\/documentation\/metawear\/metawear"},"01-root-02-07.swift":{"syntax":"swift","content":["@main","struct MacApp: App {","    @StateObject private var root = Root()","","    var body: some Scene {","        WindowGroup {","            NavigationView {","                DeviceListSidebar(root)","                EmptyView()","            }","            .toolbar { BluetoothStateToolbar(root: root) }","            .onAppear(perform: root.start)","            .environmentObject(root)","        }","    }","}"],"fileName":"App.swift","identifier":"01-root-02-07.swift","type":"file","fileType":"swift","highlights":[]},"streamyIcon.png":{"alt":"Streamy app icon","type":"image","identifier":"streamyIcon.png","variants":[{"url":"\/images\/streamyIcon@2x.png","traits":["2x","light"]}]},"doc://MetaWear/tutorials/MetaWear/Adding-MetaWear-to-a-Project":{"role":"project","title":"Adding MetaWear to a Project","estimatedTime":"5min","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":", an app to capture and analyze motion sensor data."},{"type":"text","text":" "},{"type":"text","text":"You’ll start by adding the MetaWear SDK using Swift Package Manager and then link up dependencies."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project","kind":"project","type":"topic","url":"\/tutorials\/metawear\/adding-metawear-to-a-project"},"doc://MetaWear/tutorials/MetaWear/Training-Activity-Classification#Forthcoming":{"role":"pseudoSymbol","title":"Forthcoming","abstract":[{"type":"text","text":"Forthcoming."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Training-Activity-Classification#Forthcoming","kind":"section","type":"section","url":"\/tutorials\/metawear\/training-activity-classification#Forthcoming"},"doc://MetaWear/documentation/MetaWear":{"role":"collection","title":"MetaWear","abstract":[{"type":"text","text":"Develop Bluetooth Low Energy apps using our sensors and "},{"type":"codeVoice","code":"Combine"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear","kind":"symbol","type":"topic","url":"\/documentation\/metawear"},"doc://MetaWear/tutorials/MetaWear/Discover-&-Connect":{"role":"article","title":"Discover & Connect","abstract":[],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Discover-&-Connect","kind":"article","type":"topic","url":"\/tutorials\/metawear\/discover-&-connect"},"doc://MetaWear/tutorials/MetaWear/Log-Sensor-Data":{"role":"article","title":"Log Sensor Data","abstract":[],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Log-Sensor-Data","kind":"article","type":"topic","url":"\/tutorials\/metawear\/log-sensor-data"},"doc://MetaWear/tutorials/MetaWear/Adding-MetaWear-to-a-Project#Add-MetaWear-and-MetaWearSync":{"role":"pseudoSymbol","title":"Add MetaWear and MetaWearSync","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":", an app to capture and analyze motion sensor data."},{"type":"text","text":" "},{"type":"text","text":"You’ll start by adding the MetaWear SDK using Swift Package Manager and then link up dependencies."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#Add-MetaWear-and-MetaWearSync","kind":"section","type":"section","url":"\/tutorials\/metawear\/adding-metawear-to-a-project#Add-MetaWear-and-MetaWearSync"},"tut-iOSPermissions.png":{"alt":".","type":"image","identifier":"tut-iOSPermissions.png","variants":[{"url":"\/images\/tut-iOSPermissions@2x.png","traits":["2x","light"]}]},"tut-Plist.png":{"alt":".","type":"image","identifier":"tut-Plist.png","variants":[{"url":"\/images\/tut-Plist@2x.png","traits":["2x","light"]}]},"01-root-01-03.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","","class Root: ObservableObject {","","    let scanner: MetaWearScanner","","    private let localDefaults: UserDefaults","","    init() {","        self.scanner = .sharedRestore","        self.localDefaults = .standard","    }","","    func start() {","","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-03.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":12}]},"tut-ManuallyAddProducts.png":{"alt":".","type":"image","identifier":"tut-ManuallyAddProducts.png","variants":[{"url":"\/images\/tut-ManuallyAddProducts@2x.png","traits":["2x","light"]}]},"01-root-01-06.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","import MetaWearSync","","class Root: ObservableObject {","","    let syncedDevices: MetaWearSyncStore","    let scanner: MetaWearScanner","","    private let localDefaults: UserDefaults","    private let cloudDefaults: NSUbiquitousKeyValueStore","    private let deviceLoader: MWLoader<MWKnownDevicesLoadable>","","    init() {","        self.scanner = .sharedRestore","        self.localDefaults = .standard","        self.cloudDefaults = .default","        MWConsoleLogger.activateConsoleLoggingOnAllMetaWears = true","        self.deviceLoader = MetaWeariCloudSyncLoader(localDefaults, cloudDefaults)","        self.syncedDevices = .init(scanner: scanner, loader: deviceLoader)","    }","","    func start() {","        do {","            _ = cloudDefaults.synchronize()","            try syncedDevices.load()","","        } catch { NSLog(\"Load failure: \\(error.localizedDescription)\") }","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-06.swift","type":"file","fileType":"swift","highlights":[{"line":18}]},"01-root-01-04.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","import MetaWearSync","","class Root: ObservableObject {","","    let syncedDevices: MetaWearSyncStore","    let scanner: MetaWearScanner","","    private let localDefaults: UserDefaults","    private let cloudDefaults: NSUbiquitousKeyValueStore","    private let deviceLoader: MWLoader<MWKnownDevicesLoadable>","","    init() {","        self.scanner = .sharedRestore","        self.localDefaults = .standard","        self.cloudDefaults = .default","        self.deviceLoader = MetaWeariCloudSyncLoader(localDefaults, cloudDefaults)","        self.syncedDevices = .init(scanner: scanner, loader: deviceLoader)","    }","","    func start() {","        do {","            try syncedDevices.load()","","        } catch { NSLog(\"Load failure: \\(error.localizedDescription)\") }","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-04.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":7},{"line":11},{"line":12},{"line":17},{"line":18},{"line":19},{"line":23},{"line":24},{"line":26}]},"doc://MetaWear/tutorials/MetaWear/Connecting-to-MetaWears":{"role":"project","title":"Connecting to MetaWears","estimatedTime":"10min","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears","kind":"project","type":"topic","url":"\/tutorials\/metawear\/connecting-to-metawears"},"doc://MetaWear/documentation/MetaWear/MWConsoleLogger/activateConsoleLoggingOnAllMetaWears":{"role":"symbol","title":"activateConsoleLoggingOnAllMetaWears","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"activateConsoleLoggingOnAllMetaWears"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Configures this logger as the default logger for all MetaWears."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger\/activateConsoleLoggingOnAllMetaWears","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/mwconsolelogger\/activateconsoleloggingonallmetawears"},"01-root-01-02.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","","class Root: ObservableObject {","","    let scanner: MetaWearScanner","","    init() {","        self.scanner = .sharedRestore","    }","","    func start() {","","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-02.swift","type":"file","fileType":"swift","highlights":[{"line":2},{"line":6},{"line":8},{"line":9}]},"doc://MetaWear/tutorials/MetaWear/Using-a-CoreML-Model#Forthcoming":{"role":"pseudoSymbol","title":"Forthcoming","abstract":[{"type":"text","text":"Forthcoming."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Using-a-CoreML-Model#Forthcoming","kind":"section","type":"section","url":"\/tutorials\/metawear\/using-a-coreml-model#Forthcoming"},"01-root-01-01.swift":{"syntax":"swift","content":["import Foundation","","class Root: ObservableObject {","","    init() {","","    }","","    func start() {","","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-01.swift","type":"file","fileType":"swift","highlights":[]},"doc://MetaWear/tutorials/MetaWear/Connecting-to-MetaWears#List-nearby-devices":{"role":"pseudoSymbol","title":"List nearby devices","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#List-nearby-devices","kind":"section","type":"section","url":"\/tutorials\/metawear\/connecting-to-metawears#List-nearby-devices"},"doc://MetaWear/tutorials/MetaWear/Using-a-CoreML-Model":{"role":"project","title":"Using a CoreML Model","estimatedTime":"20min","abstract":[{"type":"text","text":"Forthcoming."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Using-a-CoreML-Model","kind":"project","type":"topic","url":"\/tutorials\/metawear\/using-a-coreml-model"},"doc://MetaWear/tutorials/MetaWear/Adding-MetaWear-to-a-Project#Swift-Package-Manager":{"role":"pseudoSymbol","title":"Swift Package Manager","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":", an app to capture and analyze motion sensor data."},{"type":"text","text":" "},{"type":"text","text":"You’ll start by adding the MetaWear SDK using Swift Package Manager and then link up dependencies."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#Swift-Package-Manager","kind":"section","type":"section","url":"\/tutorials\/metawear\/adding-metawear-to-a-project#Swift-Package-Manager"},"doc://MetaWear/documentation/MetaWear/MetaWearScanner":{"role":"symbol","title":"MetaWearScanner","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaWearScanner"}],"abstract":[{"type":"text","text":"Start scanning for MetaWear devices without having to understand all of CoreBluetooth. Pipelines return on the scanner’s unique "},{"type":"codeVoice","code":"bleQueue"},{"type":"text","text":"."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWearScanner","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetaWearScanner"}],"url":"\/documentation\/metawear\/metawearscanner"},"doc://MetaWear/documentation/MetaWear/MWConsoleLogger":{"role":"symbol","title":"MWConsoleLogger","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWConsoleLogger"}],"abstract":[{"type":"text","text":"Prints MetaWear Bluetooth packets to the console. Singleton."},{"type":"text","text":" "},{"type":"text","text":"Set "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger\/activateConsoleLoggingOnAllMetaWears"},{"type":"text","text":" to enroll all devices or manually set the logger in the target MetaWear."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWConsoleLogger"}],"url":"\/documentation\/metawear\/mwconsolelogger"},"bird-red.png":{"alt":"Bird art","type":"image","identifier":"bird-red.png","variants":[{"url":"\/images\/bird-red@1x.png","traits":["1x","light"]}]},"bird-red-yellow.png":{"alt":"Bird art","type":"image","identifier":"bird-red-yellow.png","variants":[{"url":"\/images\/bird-red-yellow@1x.png","traits":["1x","light"]}]},"tut-MacPermissions.png":{"alt":".","type":"image","identifier":"tut-MacPermissions.png","variants":[{"url":"\/images\/tut-MacPermissions@2x.png","traits":["2x","light"]}]},"doc://MetaWear/tutorials/MetaWear/Logging-Sensor-Data#Configure-logging-commands":{"role":"pseudoSymbol","title":"Configure logging commands","abstract":[{"type":"text","text":"Configure an arbitrary number of sensors for logging, exporting time-synced data as CSVs in a folder."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#Configure-logging-commands","kind":"section","type":"section","url":"\/tutorials\/metawear\/logging-sensor-data#Configure-logging-commands"},"doc://MetaWear/tutorials/MetaWear/Connecting-to-MetaWears#First-connection":{"role":"pseudoSymbol","title":"First connection","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#First-connection","kind":"section","type":"section","url":"\/tutorials\/metawear\/connecting-to-metawears#First-connection"},"doc://MetaWear/tutorials/MetaWear/Training-Activity-Classification":{"role":"project","title":"Training Activity Classification","estimatedTime":"20min","abstract":[{"type":"text","text":"Forthcoming."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Training-Activity-Classification","kind":"project","type":"topic","url":"\/tutorials\/metawear\/training-activity-classification"},"Streamy.zip":{"checksum":"685fd06a76d72ed2f5663062b12da1a5db31bf221aaf21461557f448f689566844b9e978c508ff59346d8afed8ae3258e4fb37b1a9bf79f84ddc3fb4f5057946","type":"download","identifier":"Streamy.zip","url":"\/downloads\/Streamy.zip"},"doc://MetaWear/tutorials/MetaWear":{"role":"overview","title":"From Zero to Machine Learning","abstract":[{"type":"text","text":"Control MetaWear wearable sensors to classify movement. Let’s build "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":", a barebones app using "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":", "},{"type":"codeVoice","code":"Combine"},{"type":"text","text":", "},{"type":"codeVoice","code":"CoreML"},{"type":"text","text":", and "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":"."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear","kind":"overview","type":"topic","url":"\/tutorials\/metawear"},"doc://MetaWear/tutorials/MetaWear/Logging-Sensor-Data":{"role":"project","title":"Logging Sensor Data","estimatedTime":"5min","abstract":[{"type":"text","text":"Configure an arbitrary number of sensors for logging, exporting time-synced data as CSVs in a folder."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data","kind":"project","type":"topic","url":"\/tutorials\/metawear\/logging-sensor-data"},"01-root-01-05.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","import MetaWearSync","","class Root: ObservableObject {","","    let syncedDevices: MetaWearSyncStore","    let scanner: MetaWearScanner","","    private let localDefaults: UserDefaults","    private let cloudDefaults: NSUbiquitousKeyValueStore","    private let deviceLoader: MWLoader<MWKnownDevicesLoadable>","","    init() {","        self.scanner = .sharedRestore","        self.localDefaults = .standard","        self.cloudDefaults = .default","        self.deviceLoader = MetaWeariCloudSyncLoader(localDefaults, cloudDefaults)","        self.syncedDevices = .init(scanner: scanner, loader: deviceLoader)","    }","","    func start() {","        do {","            _ = cloudDefaults.synchronize()","            try syncedDevices.load()","","        } catch { NSLog(\"Load failure: \\(error.localizedDescription)\") }","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-05.swift","type":"file","fileType":"swift","highlights":[{"line":24}]},"tut-AddPackage.png":{"alt":".","type":"image","identifier":"tut-AddPackage.png","variants":[{"url":"\/images\/tut-AddPackage@2x.png","traits":["2x","light"]}]},"doc://MetaWear/tutorials/MetaWear/Connecting-to-MetaWears#Managing-known-devices":{"role":"pseudoSymbol","title":"Managing known devices","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#Managing-known-devices","kind":"section","type":"section","url":"\/tutorials\/metawear\/connecting-to-metawears#Managing-known-devices"},"doc://MetaWear/tutorials/MetaWear/Train-a-CoreML-Model":{"role":"article","title":"Train a CoreML Model","abstract":[],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Train-a-CoreML-Model","kind":"article","type":"topic","url":"\/tutorials\/metawear\/train-a-coreml-model"},"tut-AddPackageProducts.png":{"alt":".","type":"image","identifier":"tut-AddPackageProducts.png","variants":[{"url":"\/images\/tut-AddPackageProducts@2x.png","traits":["2x","light"]}]},"doc://MetaWear/documentation/MetaWear/MWConsoleLoggerDelegate":{"role":"symbol","title":"MWConsoleLoggerDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWConsoleLoggerDelegate"}],"abstract":[{"type":"text","text":"Handles log messages (e.g., Bluetooth packets) from MetaWear devices"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLoggerDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWConsoleLoggerDelegate"}],"url":"\/documentation\/metawear\/mwconsoleloggerdelegate"},"doc://MetaWear/tutorials/MetaWear/Logging-Sensor-Data#Download-data":{"role":"pseudoSymbol","title":"Download data","abstract":[{"type":"text","text":"Configure an arbitrary number of sensors for logging, exporting time-synced data as CSVs in a folder."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#Download-data","kind":"section","type":"section","url":"\/tutorials\/metawear\/logging-sensor-data#Download-data"}}}