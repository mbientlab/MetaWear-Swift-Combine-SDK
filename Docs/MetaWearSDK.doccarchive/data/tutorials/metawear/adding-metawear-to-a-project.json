{"metadata":{"title":"Adding MetaWear to a Project","categoryPathComponent":"MetaWear","role":"project","category":"MetaWear"},"hierarchy":{"modules":[{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Discover-&-Connect","projects":[{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#Whats-Ahead"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#Swift-Package-Manager-&-Permissions"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#The-Core-SDK-Classes"}]},{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#List-nearby-devices"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#First-connection"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#Managing-known-devices"}]}]},{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Log-Sensor-Data","projects":[{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#To-Log-or-Download?"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#Configure-logging-commands"},{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#Download-data"}]}]},{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Train-a-CoreML-Model","projects":[{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Training-Activity-Classification","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Training-Activity-Classification#Collecting-Training-Data"}]},{"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Using-a-CoreML-Model","sections":[{"kind":"task","reference":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Using-a-CoreML-Model#Forthcoming"}]}]}],"reference":"doc:\/\/MetaWear\/tutorials\/MetaWear","paths":[["doc:\/\/MetaWear\/tutorials\/MetaWear","doc:\/\/MetaWear\/tutorials\/MetaWear\/$volume","doc:\/\/MetaWear\/tutorials\/MetaWear\/Discover-&-Connect"]]},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial examines the dependencies and permissions needed for the SDK."}]}],"estimatedTimeInMinutes":5,"title":"Adding MetaWear to a Project","image":"streamyIcon.png","chapter":"Discover & Connect","kind":"hero","backgroundImage":"streamyIcon.png","projectFiles":"Streamy.zip"},{"kind":"tasks","tasks":[{"anchor":"Whats-Ahead","title":"What's Ahead","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this tutorial series, we will tour the SDK by writing small logic layer use case components for an app that collects sensor data."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, we’ll train and implement a CoreML activity classifier for writing letters in the air. (Yes, at some point we will YMCA.)"}]}],"mediaPosition":"trailing","media":"bird-streamy.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you wish, you can clone a companion demo app, "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mbientlab\/Streamy"},{"type":"text","text":", that implements the components we build in this series."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-streamy-mac-ios.png"},{"code":"00-root-01-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial will not cover UI or write every line of an app. Our focus is simply the ins and outs of this SDK."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" happens to use SwiftUI, but this tutorial series is UI framework agnostic."}]}],"type":"step","runtimePreview":"tut-streamy-mac-ios.png","media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also reference the source code of "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mbientlab\/MetaWear-MetaBase-iOS-macOS-App"},{"type":"text","text":", our easy-mode app for collecting MetaWear sensor data."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-metabase-mac-ios.png"},{"code":"00-root-01-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A final resource for tinkering is using the SDK’s "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mbientlab\/MetaWear-Swift-Combine-SDK\/tree\/main\/Tests\/IntegrationTests"},{"type":"text","text":" to write one-off tests."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Swift-Package-Manager-&-Permissions","title":"Swift Package Manager & Permissions","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add the Swift Combine SDK to your project using Xcode’s native package dependency manager."}]}],"mediaPosition":"trailing","media":"bird-red.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the File menu, choose Add Package…"},{"type":"text","text":" "},{"type":"text","text":"https:\/\/github.com\/mbientlab\/MetaWear-Swift-Combine-SDK"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, Xcode will update the MetaWear package when minor versions are released, but not for a major release. You can also depend on a branch head or a commit."}]}],"type":"step","runtimePreview":null,"media":"tut-AddPackage.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this tutorial, we’ll use all frameworks except the one to update device Firmware."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-AddPackageProducts.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode will likely only add these frameworks to one of your targets. Remedy this by tapping the + icon inside the "},{"type":"codeVoice","code":"Frameworks, Libraries and Embedded Content"},{"type":"text","text":" section to add the same frameworks as above."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-ManuallyAddProducts.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t forget to set the two Info.plist Bluetooth privacy usage descriptions. Your app will not function otherwise."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-Plist.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For macOS, match permissions to this screenshot. Ensure App Sandbox -> Bluetooth and iCloud -> CloudKit permissions are enabled."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-MacPermissions.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For iOS, we need to check different boxes. Add Background Modes and check Uses Bluetooth LE accessories. Add iCloud, checking Key value storage."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"tut-iOSPermissions.png"}]},{"anchor":"The-Core-SDK-Classes","title":"The Core SDK Classes","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll use three core classes: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWearScanner"},{"type":"text","text":", and "},{"type":"codeVoice","code":"MetaWearSyncStore"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When debugging, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger"},{"type":"text","text":" can visualize Bluetooth communications."}]}],"mediaPosition":"trailing","media":"bird-red-yellow.png"}],"stepsSection":[{"code":"01-root-01-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s look at how we could wire up the SDK inside an app’s root object."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWearScanner"},{"type":"text","text":" abstracts the CoreBluetooth framework for you, finding nearby "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear"},{"type":"text","text":" devices. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWearScanner\/sharedRestore"},{"type":"text","text":" singleton enables CoreBluetooth to recognize this app and vend it previously used peripherals."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To persist names, capabilities, and other data about previously connected MetaWears, the scanner and other SDK components use UserDefaults storage."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"FYI"}]},{"type":"text","text":" - You can inspect the keys used and specify the container at "},{"type":"codeVoice","code":"UserDefaults.MetaWear.suite"},{"type":"text","text":". By default, the SDK uses "},{"type":"codeVoice","code":".standard"},{"type":"text","text":"."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Apple randomizes Bluetooth device identifiers between devices. It also blocks inspecting advertised MAC addresses."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"MetaWearSyncStore"},{"type":"text","text":" allows you to stably identify MetaWears across devices by saving de-identifying metadata to iCloud key value storage, including a device’s name, serial number, and sensor capabilities. If you choose to use this feature, obtain and manage MetaWears exclusively through the sync store, rather than the Scanner."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An iCloud key value store must be synchronized at launch to obtain the latest values."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-root-01-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When debugging, you might find the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger"},{"type":"text","text":" helpful. If you set "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger\/activateConsoleLoggingOnAllMetaWears"},{"type":"text","text":" to true at startup, all MetaWears will report activities (e.g., Bluetooth packets) to the console in Debug mode."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Tip"}]},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"If you wish to log just one MetaWear, assign a delegate conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLoggerDelegate"},{"type":"text","text":" to its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear\/logDelegate"},{"type":"text","text":" property."}]}]}],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Connecting to MetaWears","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}]}],"references":{"01-root-01-04.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","import MetaWearSync","","class Root {","","    let syncedDevices: MetaWearSyncStore","    let scanner: MetaWearScanner","","    private let localDefaults: UserDefaults","    private let cloudDefaults: NSUbiquitousKeyValueStore","    private let deviceLoader: MWLoader<MWKnownDevicesLoadable>","","    init() {","        self.scanner = .sharedRestore","        self.localDefaults = .standard","        self.cloudDefaults = .default","        self.deviceLoader = MetaWeariCloudSyncLoader(localDefaults, cloudDefaults)","        self.syncedDevices = .init(scanner: scanner, loader: deviceLoader)","    }","","    func start() {","        do {","            try syncedDevices.load()","","        } catch { NSLog(\"Load failure: \\(error.localizedDescription)\") }","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-04.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":7},{"line":11},{"line":12},{"line":17},{"line":18},{"line":19},{"line":23},{"line":24},{"line":26}]},"tut-Plist.png":{"alt":"Xcode screenshot of an Info.plist with two Privacy - Bluetooth keys","type":"image","identifier":"tut-Plist.png","variants":[{"url":"\/images\/tut-Plist@2x.png","traits":["2x","light"]}]},"https://github.com/mbientlab/MetaWear-Swift-Combine-SDK/tree/main/Tests/IntegrationTests":{"title":"integration test host","titleInlineContent":[{"type":"text","text":"integration test host"}],"type":"link","identifier":"https:\/\/github.com\/mbientlab\/MetaWear-Swift-Combine-SDK\/tree\/main\/Tests\/IntegrationTests","url":"https:\/\/github.com\/mbientlab\/MetaWear-Swift-Combine-SDK\/tree\/main\/Tests\/IntegrationTests"},"tut-iOSPermissions.png":{"alt":"Xcode screenshot while adding Capabilities selections","type":"image","identifier":"tut-iOSPermissions.png","variants":[{"url":"\/images\/tut-iOSPermissions@2x.png","traits":["2x","light"]}]},"doc://MetaWear/documentation/MetaWear/MWConsoleLogger":{"role":"symbol","title":"MWConsoleLogger","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWConsoleLogger"}],"abstract":[{"type":"text","text":"Prints MetaWear Bluetooth packets to the console. Singleton."},{"type":"text","text":" "},{"type":"text","text":"Set "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger\/activateConsoleLoggingOnAllMetaWears"},{"type":"text","text":" to enroll all devices or manually set the logger in the target MetaWear."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWConsoleLogger"}],"url":"\/documentation\/metawear\/mwconsolelogger"},"doc://MetaWear/documentation/MetaWear/MetaWearScanner/sharedRestore":{"role":"symbol","title":"sharedRestore","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"sharedRestore"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MetaWearScanner","preciseIdentifier":"c:@M@MetaWear@objc(cs)MetaWearScanner"}],"abstract":[],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWearScanner\/sharedRestore","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/metawearscanner\/sharedrestore"},"doc://MetaWear/documentation/MetaWear/MWConsoleLoggerDelegate":{"role":"symbol","title":"MWConsoleLoggerDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWConsoleLoggerDelegate"}],"abstract":[{"type":"text","text":"Handles log messages (e.g., Bluetooth packets) from MetaWear devices"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLoggerDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWConsoleLoggerDelegate"}],"url":"\/documentation\/metawear\/mwconsoleloggerdelegate"},"doc://MetaWear/tutorials/MetaWear/Adding-MetaWear-to-a-Project":{"role":"project","title":"Adding MetaWear to a Project","estimatedTime":"5min","abstract":[{"type":"text","text":"This tutorial examines the dependencies and permissions needed for the SDK."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project","kind":"project","type":"topic","url":"\/tutorials\/metawear\/adding-metawear-to-a-project"},"doc://MetaWear/tutorials/MetaWear/Logging-Sensor-Data#Configure-logging-commands":{"role":"pseudoSymbol","title":"Configure logging commands","abstract":[{"type":"text","text":"Configure an arbitrary number of sensors for logging, exporting time-synced data as CSVs in a folder."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#Configure-logging-commands","kind":"section","type":"section","url":"\/tutorials\/metawear\/logging-sensor-data#Configure-logging-commands"},"doc://MetaWear/tutorials/MetaWear/Adding-MetaWear-to-a-Project#Swift-Package-Manager-&-Permissions":{"role":"pseudoSymbol","title":"Swift Package Manager & Permissions","abstract":[{"type":"text","text":"This tutorial examines the dependencies and permissions needed for the SDK."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#Swift-Package-Manager-&-Permissions","kind":"section","type":"section","url":"\/tutorials\/metawear\/adding-metawear-to-a-project#Swift-Package-Manager-&-Permissions"},"doc://MetaWear/tutorials/MetaWear/Connecting-to-MetaWears#Managing-known-devices":{"role":"pseudoSymbol","title":"Managing known devices","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#Managing-known-devices","kind":"section","type":"section","url":"\/tutorials\/metawear\/connecting-to-metawears#Managing-known-devices"},"tut-metabase-mac-ios.png":{"alt":"Screenshot of MetaBase on macOS and iOS","type":"image","identifier":"tut-metabase-mac-ios.png","variants":[{"url":"\/images\/tut-metabase-mac-ios@1x.png","traits":["1x","light"]}]},"tut-ManuallyAddProducts.png":{"alt":".","type":"image","identifier":"tut-ManuallyAddProducts.png","variants":[{"url":"\/images\/tut-ManuallyAddProducts@2x.png","traits":["2x","light"]}]},"00-root-01-01.swift":{"syntax":"swift","content":["@main","struct MacApp: App {","","    @NSApplicationDelegateAdaptor private var app: AppDelegate","","    var body: some Scene {","        MainWindowScene(factory: .init(root: app.root))","    }","}","","@main","struct iOSApp: App {","","    @UIApplicationDelegateAdaptor private var app: AppDelegate","","    var body: some Scene {","        MainScene(factory: .init(root: app.root))","    }","}"],"fileName":"StreamyApp.swift","identifier":"00-root-01-01.swift","type":"file","fileType":"swift","highlights":[]},"00-root-01-02.swift":{"syntax":"swift","content":["import XCTest","import Combine","import CoreBluetooth","@testable import MetaWear","@testable import MetaWearCpp","@testable import SwiftCombineSDKTestHost","","class ExampleTests: XCTestCase {","","    func test_DiscoversDeviceInfo() {","        TestDevices.useOnly(.metamotionS)","","        connectNearbyMetaWear(timeout: .read) { metawear, exp, subs in","            let sut = metawear.info","            XCTAssertEqual(sut.model, .motionS)","            ...","            exp.fulfill()","        }","    }","","    func test_Read_LogLength_WhenPopulated() {","        connectNearbyMetaWear(timeout: .download, useLogger: false) { metawear, exp, subs in","            \/\/ Prepare","            let log: some MWLoggable = .accelerometer(rate: .hz50, gravity: .g2)","            metawear.publish()","                .deleteLoggedEntries()","                .delay(for: 2, tolerance: 0, scheduler: metawear.bleQueue)","                .log(log)","                ._assertLoggers([log.signalName], metawear: metawear)","                .delay(for: 2, tolerance: 0, scheduler: metawear.bleQueue)","","            \/\/ Act","                .read(.logLength)","","            \/\/ Assert","                .handleEvents(receiveOutput: { output in","                    XCTAssertGreaterThan(output.value, 1)","                })","","            \/\/ Cleanup","                .map { _ in metawear }","                .command(.resetActivities)","                .deleteLoggedEntries()","                ._sinkNoFailure(&subs, receiveValue: { _ in  exp.fulfill() })","        }","    }","}"],"fileName":"ExampleTests.swift","identifier":"00-root-01-02.swift","type":"file","fileType":"swift","highlights":[]},"doc://MetaWear/tutorials/MetaWear/Logging-Sensor-Data":{"role":"project","title":"Logging Sensor Data","estimatedTime":"15min","abstract":[{"type":"text","text":"Configure an arbitrary number of sensors for logging, exporting time-synced data as CSVs in a folder."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data","kind":"project","type":"topic","url":"\/tutorials\/metawear\/logging-sensor-data"},"doc://MetaWear/tutorials/MetaWear/Adding-MetaWear-to-a-Project#Whats-Ahead":{"role":"pseudoSymbol","title":"What's Ahead","abstract":[{"type":"text","text":"This tutorial examines the dependencies and permissions needed for the SDK."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#Whats-Ahead","kind":"section","type":"section","url":"\/tutorials\/metawear\/adding-metawear-to-a-project#Whats-Ahead"},"01-root-01-03.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","","class Root {","","    let scanner: MetaWearScanner","","    private let localDefaults: UserDefaults","","    init() {","        self.scanner = .sharedRestore","        self.localDefaults = .standard","    }","","    func start() {","","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-03.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":12}]},"doc://MetaWear/documentation/MetaWear/MetaWear":{"role":"symbol","title":"MetaWear","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaWear"}],"abstract":[{"type":"text","text":"Each MetaWear object corresponds a physical MetaWear board. This SDK"},{"type":"text","text":" "},{"type":"text","text":"wraps type-safe Swift methods and Combine publishers around C\/C++ functions"},{"type":"text","text":" "},{"type":"text","text":"and CoreBluetooth APIs so you can get started quickly."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetaWear"}],"url":"\/documentation\/metawear\/metawear"},"bird-streamy.png":{"alt":"Bird art","type":"image","identifier":"bird-streamy.png","variants":[{"url":"\/images\/bird-streamy@1x.png","traits":["1x","light"]},{"url":"\/images\/bird-streamy@2x.png","traits":["2x","light"]}]},"doc://MetaWear/tutorials/MetaWear/Adding-MetaWear-to-a-Project#The-Core-SDK-Classes":{"role":"pseudoSymbol","title":"The Core SDK Classes","abstract":[{"type":"text","text":"This tutorial examines the dependencies and permissions needed for the SDK."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Adding-MetaWear-to-a-Project#The-Core-SDK-Classes","kind":"section","type":"section","url":"\/tutorials\/metawear\/adding-metawear-to-a-project#The-Core-SDK-Classes"},"doc://MetaWear/tutorials/MetaWear/Connecting-to-MetaWears#List-nearby-devices":{"role":"pseudoSymbol","title":"List nearby devices","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#List-nearby-devices","kind":"section","type":"section","url":"\/tutorials\/metawear\/connecting-to-metawears#List-nearby-devices"},"01-root-01-05.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","import MetaWearSync","","class Root {","","    let syncedDevices: MetaWearSyncStore","    let scanner: MetaWearScanner","","    private let localDefaults: UserDefaults","    private let cloudDefaults: NSUbiquitousKeyValueStore","    private let deviceLoader: MWLoader<MWKnownDevicesLoadable>","","    init() {","        self.scanner = .sharedRestore","        self.localDefaults = .standard","        self.cloudDefaults = .default","        self.deviceLoader = MetaWeariCloudSyncLoader(localDefaults, cloudDefaults)","        self.syncedDevices = .init(scanner: scanner, loader: deviceLoader)","    }","","    func start() {","        do {","            _ = cloudDefaults.synchronize()","            try syncedDevices.load()","","        } catch { NSLog(\"Load failure: \\(error.localizedDescription)\") }","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-05.swift","type":"file","fileType":"swift","highlights":[{"line":24}]},"tut-streamy-mac-ios.png":{"alt":"Screenshot of Streamy on macOS and iOS","type":"image","identifier":"tut-streamy-mac-ios.png","variants":[{"url":"\/images\/tut-streamy-mac-ios@1x.png","traits":["1x","light"]}]},"https://github.com/mbientlab/MetaWear-MetaBase-iOS-macOS-App":{"title":"Metabase 5","titleInlineContent":[{"type":"text","text":"Metabase 5"}],"type":"link","identifier":"https:\/\/github.com\/mbientlab\/MetaWear-MetaBase-iOS-macOS-App","url":"https:\/\/github.com\/mbientlab\/MetaWear-MetaBase-iOS-macOS-App"},"doc://MetaWear/tutorials/MetaWear/Training-Activity-Classification":{"role":"project","title":"Training an Activity Classifier","estimatedTime":"15min","abstract":[{"type":"text","text":"Let’s collect training data for CoreML to compute a model for classifying motion data."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Training-Activity-Classification","kind":"project","type":"topic","url":"\/tutorials\/metawear\/training-activity-classification"},"tut-AddPackage.png":{"alt":"Xcode screenshot while adding a package","type":"image","identifier":"tut-AddPackage.png","variants":[{"url":"\/images\/tut-AddPackage@2x.png","traits":["2x","light"]}]},"doc://MetaWear/tutorials/MetaWear":{"role":"overview","title":"From Zero to Machine Learning","abstract":[{"type":"text","text":"Control MetaWear wearable sensors to classify movement. Let’s build "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":", a barebones app using "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":", "},{"type":"codeVoice","code":"Combine"},{"type":"text","text":", "},{"type":"codeVoice","code":"CoreML"},{"type":"text","text":", and "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":"."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear","kind":"overview","type":"topic","url":"\/tutorials\/metawear"},"bird-red.png":{"alt":"Bird art","type":"image","identifier":"bird-red.png","variants":[{"url":"\/images\/bird-red@1x.png","traits":["1x","light"]}]},"streamyIcon.png":{"alt":"Streamy app icon","type":"image","identifier":"streamyIcon.png","variants":[{"url":"\/images\/streamyIcon@2x.png","traits":["2x","light"]}]},"bird-red-yellow.png":{"alt":"Bird art","type":"image","identifier":"bird-red-yellow.png","variants":[{"url":"\/images\/bird-red-yellow@1x.png","traits":["1x","light"]}]},"doc://MetaWear/tutorials/MetaWear/Connecting-to-MetaWears#First-connection":{"role":"pseudoSymbol","title":"First connection","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears#First-connection","kind":"section","type":"section","url":"\/tutorials\/metawear\/connecting-to-metawears#First-connection"},"tut-AddPackageProducts.png":{"alt":"Xcode screenshot while selecting frameworks","type":"image","identifier":"tut-AddPackageProducts.png","variants":[{"url":"\/images\/tut-AddPackageProducts@2x.png","traits":["2x","light"]}]},"doc://MetaWear/documentation/MetaWear/MetaWear/logDelegate":{"role":"symbol","title":"logDelegate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logDelegate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWConsoleLoggerDelegate","preciseIdentifier":"s:8MetaWear23MWConsoleLoggerDelegateP"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Receives device activity (e.g., Bluetooth packets)"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear\/logDelegate","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/metawear\/logdelegate"},"doc://MetaWear/tutorials/MetaWear/Train-a-CoreML-Model":{"role":"article","title":"Train a CoreML Model","abstract":[],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Train-a-CoreML-Model","kind":"article","type":"topic","url":"\/tutorials\/metawear\/train-a-coreml-model"},"doc://MetaWear/tutorials/MetaWear/Using-a-CoreML-Model":{"role":"project","title":"Using a CoreML Model","estimatedTime":"15min","abstract":[{"type":"text","text":"Forthcoming."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Using-a-CoreML-Model","kind":"project","type":"topic","url":"\/tutorials\/metawear\/using-a-coreml-model"},"doc://MetaWear/tutorials/MetaWear/Log-Sensor-Data":{"role":"article","title":"Log Sensor Data","abstract":[],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Log-Sensor-Data","kind":"article","type":"topic","url":"\/tutorials\/metawear\/log-sensor-data"},"doc://MetaWear/tutorials/MetaWear/Logging-Sensor-Data#To-Log-or-Download?":{"role":"pseudoSymbol","title":"To Log or Download?","abstract":[{"type":"text","text":"Configure an arbitrary number of sensors for logging, exporting time-synced data as CSVs in a folder."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#To-Log-or-Download?","kind":"section","type":"section","url":"\/tutorials\/metawear\/logging-sensor-data#To-Log-or-Download?"},"01-root-01-01.swift":{"syntax":"swift","content":["import Foundation","","class Root {","","","","    init() {","","    }","","    func start() {","","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-01.swift","type":"file","fileType":"swift","highlights":[]},"01-root-01-06.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","import MetaWearSync","","class Root {","","    let syncedDevices: MetaWearSyncStore","    let scanner: MetaWearScanner","","    private let localDefaults: UserDefaults","    private let cloudDefaults: NSUbiquitousKeyValueStore","    private let deviceLoader: MWLoader<MWKnownDevicesLoadable>","","    init() {","        self.scanner = .sharedRestore","        self.localDefaults = .standard","        self.cloudDefaults = .default","        MWConsoleLogger.activateConsoleLoggingOnAllMetaWears = true","        self.deviceLoader = MetaWeariCloudSyncLoader(localDefaults, cloudDefaults)","        self.syncedDevices = .init(scanner: scanner, loader: deviceLoader)","    }","","    func start() {","        do {","            _ = cloudDefaults.synchronize()","            try syncedDevices.load()","","        } catch { NSLog(\"Load failure: \\(error.localizedDescription)\") }","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-06.swift","type":"file","fileType":"swift","highlights":[{"line":18}]},"doc://MetaWear/documentation/MetaWear/MWConsoleLogger/activateConsoleLoggingOnAllMetaWears":{"role":"symbol","title":"activateConsoleLoggingOnAllMetaWears","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"activateConsoleLoggingOnAllMetaWears"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Configures this logger as the default logger for all MetaWears."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWConsoleLogger\/activateConsoleLoggingOnAllMetaWears","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/mwconsolelogger\/activateconsoleloggingonallmetawears"},"Streamy.zip":{"checksum":"37d02e914436e3be7cad8b6278697ae323af5f0ce941dab5d9005a05c34e347fd37e54c1f12c401aba55671a33667f73311abcb237050010942dcc5cdd956a25","type":"download","identifier":"Streamy.zip","url":"\/downloads\/Streamy.zip"},"https://github.com/mbientlab/Streamy":{"title":"Streamy","titleInlineContent":[{"type":"text","text":"Streamy"}],"type":"link","identifier":"https:\/\/github.com\/mbientlab\/Streamy","url":"https:\/\/github.com\/mbientlab\/Streamy"},"doc://MetaWear/documentation/MetaWear/MetaWearScanner":{"role":"symbol","title":"MetaWearScanner","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaWearScanner"}],"abstract":[{"type":"text","text":"Start scanning for MetaWear devices without having to understand all of CoreBluetooth. Pipelines return on the scanner’s unique "},{"type":"codeVoice","code":"bleQueue"},{"type":"text","text":"."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWearScanner","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetaWearScanner"}],"url":"\/documentation\/metawear\/metawearscanner"},"tut-MacPermissions.png":{"alt":"Xcode screenshot while adding Capabilities selections","type":"image","identifier":"tut-MacPermissions.png","variants":[{"url":"\/images\/tut-MacPermissions@2x.png","traits":["2x","light"]}]},"01-root-01-02.swift":{"syntax":"swift","content":["import Foundation","import MetaWear","","class Root {","","    let scanner: MetaWearScanner","","    init() {","        self.scanner = .sharedRestore","    }","","    func start() {","","    }","}"],"fileName":"Root.swift","identifier":"01-root-01-02.swift","type":"file","fileType":"swift","highlights":[{"line":2},{"line":6},{"line":9}]},"doc://MetaWear/tutorials/MetaWear/Training-Activity-Classification#Collecting-Training-Data":{"role":"pseudoSymbol","title":"Collecting Training Data","abstract":[{"type":"text","text":"Let’s collect training data for CoreML to compute a model for classifying motion data."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Training-Activity-Classification#Collecting-Training-Data","kind":"section","type":"section","url":"\/tutorials\/metawear\/training-activity-classification#Collecting-Training-Data"},"doc://MetaWear/tutorials/MetaWear/Discover-&-Connect":{"role":"article","title":"Discover & Connect","abstract":[],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Discover-&-Connect","kind":"article","type":"topic","url":"\/tutorials\/metawear\/discover-&-connect"},"doc://MetaWear/tutorials/MetaWear/Logging-Sensor-Data#Download-data":{"role":"pseudoSymbol","title":"Download data","abstract":[{"type":"text","text":"Configure an arbitrary number of sensors for logging, exporting time-synced data as CSVs in a folder."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Logging-Sensor-Data#Download-data","kind":"section","type":"section","url":"\/tutorials\/metawear\/logging-sensor-data#Download-data"},"doc://MetaWear/tutorials/MetaWear/Using-a-CoreML-Model#Forthcoming":{"role":"pseudoSymbol","title":"Forthcoming","abstract":[{"type":"text","text":"Forthcoming."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Using-a-CoreML-Model#Forthcoming","kind":"section","type":"section","url":"\/tutorials\/metawear\/using-a-coreml-model#Forthcoming"},"doc://MetaWear/documentation/MetaWear":{"role":"collection","title":"MetaWear","abstract":[{"type":"text","text":"Develop Bluetooth Low Energy apps using our sensors and "},{"type":"codeVoice","code":"Combine"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear","kind":"symbol","type":"topic","url":"\/documentation\/metawear"},"doc://MetaWear/tutorials/MetaWear/Connecting-to-MetaWears":{"role":"project","title":"Connecting to MetaWears","estimatedTime":"15min","abstract":[{"type":"text","text":"Learn how "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Streamy"}]},{"type":"text","text":" finds and manages both nearby and cloud-synced MetaWears."}],"identifier":"doc:\/\/MetaWear\/tutorials\/MetaWear\/Connecting-to-MetaWears","kind":"project","type":"topic","url":"\/tutorials\/metawear\/connecting-to-metawears"}}}