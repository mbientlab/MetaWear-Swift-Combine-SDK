{"seeAlsoSections":[{"title":"Interact","identifiers":["doc:\/\/MetaWear\/documentation\/MetaWear\/MWCommand","doc:\/\/MetaWear\/documentation\/MetaWear\/MWCommandWithResponse","doc:\/\/MetaWear\/documentation\/MetaWear\/MWLoggable","doc:\/\/MetaWear\/documentation\/MetaWear\/MWReadable","doc:\/\/MetaWear\/documentation\/MetaWear\/MWReadableMerged","doc:\/\/MetaWear\/documentation\/MetaWear\/MWStreamable","doc:\/\/MetaWear\/documentation\/MetaWear\/MWFrequency"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWPollable"}],"title":"MWPollable","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:8MetaWear10MWPollableP","modules":[{"name":"MetaWear"}],"navigatorTitle":[{"kind":"identifier","text":"MWPollable"}]},"abstract":[{"type":"text","text":"Sensors natively incapable of continuous output, such as thermistors,"},{"type":"text","text":" "},{"type":"text","text":"can output “streamable” and loggable outputs with the help of"},{"type":"text","text":" "},{"type":"text","text":"onboard timers that fire at reasonable intervals. This protocol"},{"type":"text","text":" "},{"type":"text","text":"organizes the methods and properties for polling such sensors."}],"sections":[],"identifier":{"url":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/MetaWear\/documentation\/MetaWear\/MWDataConvertible","doc:\/\/MetaWear\/documentation\/MetaWear\/MWReadable","doc:\/\/MetaWear\/SQ","doc:\/\/MetaWear\/SH"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/MetaWear\/documentation\/MetaWear\/MWHumidity","doc:\/\/MetaWear\/documentation\/MetaWear\/MWThermometer"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/MetaWear\/documentation\/MetaWear"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/pollingRate","doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/signalName"]},{"title":"Instance Methods","identifiers":["doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/pollCleanup(board:)-2yjkq","doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/pollConfigure(board:)-1wfq5","doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/pollSensorSignal(board:)-1dubo"]},{"title":"Type Methods","identifiers":["doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/humidity(oversampling:rate:)","doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/thermometer(rate:type:board:)"]}],"variants":[{"paths":["\/documentation\/metawear\/mwpollable"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"public"},{"kind":"text","text":" "},{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWPollable"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWReadable","preciseIdentifier":"s:8MetaWear10MWReadableP","text":"MWReadable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To start polling, use the "},{"type":"codeVoice","code":".stream()"},{"type":"text","text":" or "},{"type":"codeVoice","code":".log()"},{"type":"text","text":" operators. These are"},{"type":"text","text":" "},{"type":"text","text":"available on a "},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":" whose output is a "},{"type":"codeVoice","code":"MetaWear"},{"type":"text","text":", including:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear\/publish()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear\/publishIfConnected()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear\/publishWhenConnected()"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These operators accept "},{"type":"codeVoice","code":"MWPollable"},{"type":"text","text":" instances constructed by"},{"type":"text","text":" "},{"type":"text","text":"autocompletion, such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/humidity(oversampling:rate:)"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or directly, such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWHumidity\/init(oversampling:rate:)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct construction may be useful for patterns where you persist"},{"type":"text","text":" "},{"type":"text","text":"user selected settings or organize arbitrarily large logging or"},{"type":"text","text":" "},{"type":"text","text":"streaming sessions. Our open-source "},{"type":"strong","inlineContent":[{"type":"text","text":"MetaBase 5"}]},{"type":"text","text":" app provides an example"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mbientlab\/MetaBase\/blob\/main\/Shared\/Screens\/4_Action\/VMs\/ActionVM.swift"},{"type":"text","text":" of starting logging and streaming sessions with arbitrary"},{"type":"text","text":" "},{"type":"text","text":"mixes of "},{"type":"codeVoice","code":"MWPollable"},{"type":"text","text":", "},{"type":"codeVoice","code":"MWStreamable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"MWLoggable"},{"type":"text","text":" sensors with merged"},{"type":"text","text":" "},{"type":"text","text":"outputs."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unless you construct your own sensor wrappers, this protocol’s details"},{"type":"text","text":" "},{"type":"text","text":"are unlikely to be important to you."}]}]}],"references":{"doc://MetaWear/documentation/MetaWear/MWPollable/humidity(oversampling:rate:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"MWHumidity"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"humidity(oversampling:rate:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"humidity"},{"kind":"text","text":"("},{"kind":"externalParam","text":"oversampling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWHumidity","preciseIdentifier":"s:8MetaWear10MWHumidityV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Oversampling","preciseIdentifier":"s:8MetaWear10MWHumidityV12OversamplingO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWFrequency","preciseIdentifier":"s:8MetaWear11MWFrequencyV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/humidity(oversampling:rate:)","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/mwpollable\/humidity(oversampling:rate:)"},"doc://MetaWear/documentation/MetaWear/MWPollable/pollCleanup(board:)-2yjkq":{"defaultImplementations":1,"role":"symbol","title":"pollCleanup(board:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pollCleanup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"board"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWBoard","preciseIdentifier":"s:8MetaWear7MWBoarda"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called after unsubscribing to the event signal."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/pollCleanup(board:)-2yjkq","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/metawear\/mwpollable\/pollcleanup(board:)-2yjkq"},"doc://MetaWear/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/MetaWear\/SH"},"doc://MetaWear/documentation/MetaWear/MWDataTable":{"role":"symbol","title":"MWDataTable","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWDataTable"}],"abstract":[{"type":"text","text":"Stringly-expressed data from any sensor, ready to export in CSV format."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWDataTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWDataTable"}],"url":"\/documentation\/metawear\/mwdatatable"},"doc://MetaWear/documentation/MetaWear/MWReadable":{"role":"symbol","title":"MWReadable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWReadable"}],"abstract":[{"type":"text","text":"Sensors natively incapable of continuous output, such as thermistors,"},{"type":"text","text":" "},{"type":"text","text":"adopt this protocol to organize configuring, reading, and closing a"},{"type":"text","text":" "},{"type":"text","text":"sensor’s data signal."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWReadable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWReadable"}],"url":"\/documentation\/metawear\/mwreadable"},"doc://MetaWear/documentation/MetaWear/MetaWear/publishWhenConnected()":{"role":"symbol","title":"publishWhenConnected()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"publishWhenConnected"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MetaWear","preciseIdentifier":"c:@M@MetaWear@objc(cs)MetaWear"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Publishes after connection and setup."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear\/publishWhenConnected()","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/metawear\/publishwhenconnected()"},"doc://MetaWear/documentation/MetaWear/MetaWear/publish()":{"role":"symbol","title":"publish()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"publish"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MWPublisher","preciseIdentifier":"s:8MetaWear11MWPublishera"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MetaWear","preciseIdentifier":"c:@M@MetaWear@objc(cs)MetaWear"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Publishes this MetaWear once, regardless of connection state."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear\/publish()","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/metawear\/publish()"},"doc://MetaWear/documentation/MetaWear/MWCommandWithResponse":{"role":"symbol","title":"MWCommandWithResponse","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWCommandWithResponse"}],"abstract":[{"type":"text","text":"Issues a command that returns a value."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWCommandWithResponse","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWCommandWithResponse"}],"url":"\/documentation\/metawear\/mwcommandwithresponse"},"doc://MetaWear/documentation/MetaWear/MWReadableMerged":{"role":"symbol","title":"MWReadableMerged","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWReadableMerged"}],"abstract":[{"type":"text","text":"A read command that coalesces multiple operations into one output."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWReadableMerged","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWReadableMerged"}],"url":"\/documentation\/metawear\/mwreadablemerged"},"doc://MetaWear/documentation/MetaWear":{"role":"collection","title":"MetaWear","abstract":[{"type":"text","text":"Develop Bluetooth Low Energy apps using our sensors and "},{"type":"codeVoice","code":"Combine"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear","kind":"symbol","type":"topic","url":"\/documentation\/metawear"},"doc://MetaWear/documentation/MetaWear/MWStreamable":{"role":"symbol","title":"MWStreamable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWStreamable"}],"abstract":[{"type":"text","text":"Sensors that can stream data at about 100 to 120 Hz"},{"type":"text","text":" "},{"type":"text","text":"adhere to this protocol to configure, start, and stop a"},{"type":"text","text":" "},{"type":"text","text":"data signal."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWStreamable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWStreamable"}],"url":"\/documentation\/metawear\/mwstreamable"},"doc://MetaWear/documentation/MetaWear/MWPollable/pollConfigure(board:)-1wfq5":{"defaultImplementations":1,"role":"symbol","title":"pollConfigure(board:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pollConfigure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"board"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWBoard","preciseIdentifier":"s:8MetaWear7MWBoarda"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Commands to customize the “stream”"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/pollConfigure(board:)-1wfq5","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/metawear\/mwpollable\/pollconfigure(board:)-1wfq5"},"doc://MetaWear/documentation/MetaWear/MWCommand":{"role":"symbol","title":"MWCommand","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWCommand"}],"abstract":[{"type":"text","text":"Issues a command, such as recording a macro or resetting to factory defaults."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWCommand","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWCommand"}],"url":"\/documentation\/metawear\/mwcommand"},"doc://MetaWear/documentation/MetaWear/MWHumidity":{"role":"symbol","title":"MWHumidity","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWHumidity"}],"abstract":[],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWHumidity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWHumidity"}],"url":"\/documentation\/metawear\/mwhumidity"},"doc://MetaWear/documentation/MetaWear/MetaWear/publishIfConnected()":{"role":"symbol","title":"publishIfConnected()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"publishIfConnected"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MWPublisher","preciseIdentifier":"s:8MetaWear11MWPublishera"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MetaWear","preciseIdentifier":"c:@M@MetaWear@objc(cs)MetaWear"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Publishes if connected and setup at start, failing if not."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MetaWear\/publishIfConnected()","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/metawear\/publishifconnected()"},"doc://MetaWear/documentation/MetaWear/MWPollable/pollingRate":{"role":"symbol","title":"pollingRate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pollingRate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWFrequency","preciseIdentifier":"s:8MetaWear11MWFrequencyV"}],"abstract":[{"type":"text","text":"Rate at which an event fires to read the sensor’s signal."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/pollingRate","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/metawear\/mwpollable\/pollingrate"},"doc://MetaWear/documentation/MetaWear/MWDataConvertible":{"role":"symbol","title":"MWDataConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWDataConvertible"}],"abstract":[{"type":"text","text":"Has a defined conversion from a "},{"type":"codeVoice","code":"MblMwData"},{"type":"text","text":" C++ struct into a"},{"type":"text","text":" "},{"type":"text","text":"defined Swift value type whose lifetime is not confined to the C++ closure."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWDataConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWDataConvertible"}],"url":"\/documentation\/metawear\/mwdataconvertible"},"doc://MetaWear/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/MetaWear\/SQ"},"https://github.com/mbientlab/MetaBase/blob/main/Shared/Screens/4_Action/VMs/ActionVM.swift":{"title":"ActionVM.swift","titleInlineContent":[{"type":"text","text":"ActionVM.swift"}],"type":"link","identifier":"https:\/\/github.com\/mbientlab\/MetaBase\/blob\/main\/Shared\/Screens\/4_Action\/VMs\/ActionVM.swift","url":"https:\/\/github.com\/mbientlab\/MetaBase\/blob\/main\/Shared\/Screens\/4_Action\/VMs\/ActionVM.swift"},"doc://MetaWear/documentation/MetaWear/MWLoggable":{"role":"symbol","title":"MWLoggable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWLoggable"}],"abstract":[{"type":"text","text":"Sensors that can log data to onboard storage adhere to this protocol"},{"type":"text","text":" "},{"type":"text","text":"to configure, start, stop, and download the logger."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWLoggable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWLoggable"}],"url":"\/documentation\/metawear\/mwloggable"},"doc://MetaWear/documentation/MetaWear/MWPollable":{"role":"symbol","title":"MWPollable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWPollable"}],"abstract":[{"type":"text","text":"Sensors natively incapable of continuous output, such as thermistors,"},{"type":"text","text":" "},{"type":"text","text":"can output “streamable” and loggable outputs with the help of"},{"type":"text","text":" "},{"type":"text","text":"onboard timers that fire at reasonable intervals. This protocol"},{"type":"text","text":" "},{"type":"text","text":"organizes the methods and properties for polling such sensors."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWPollable"}],"url":"\/documentation\/metawear\/mwpollable"},"doc://MetaWear/documentation/MetaWear/MWThermometer":{"role":"symbol","title":"MWThermometer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWThermometer"}],"abstract":[{"type":"text","text":"Celcius"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWThermometer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWThermometer"}],"url":"\/documentation\/metawear\/mwthermometer"},"doc://MetaWear/documentation/MetaWear/MWPollable/signalName":{"role":"symbol","title":"signalName","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"signalName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWNamedSignal","preciseIdentifier":"s:8MetaWear13MWNamedSignalO"}],"abstract":[{"type":"text","text":"Identifier for downloadable signal when exporting an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWDataTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/signalName","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/metawear\/mwpollable\/signalname"},"doc://MetaWear/documentation/MetaWear/MWHumidity/init(oversampling:rate:)":{"role":"symbol","title":"init(oversampling:rate:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"oversampling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWHumidity","preciseIdentifier":"s:8MetaWear10MWHumidityV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Oversampling","preciseIdentifier":"s:8MetaWear10MWHumidityV12OversamplingO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWFrequency","preciseIdentifier":"s:8MetaWear11MWFrequencyV"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWHumidity\/init(oversampling:rate:)","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/mwhumidity\/init(oversampling:rate:)"},"doc://MetaWear/documentation/MetaWear/MWFrequency":{"role":"symbol","title":"MWFrequency","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MWFrequency"}],"abstract":[{"type":"text","text":"Specify event frequencies in Hz or millisecond periods between events"}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWFrequency","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MWFrequency"}],"url":"\/documentation\/metawear\/mwfrequency"},"doc://MetaWear/documentation/MetaWear/MWPollable/thermometer(rate:type:board:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"MWThermometer"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"thermometer(rate:type:board:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"thermometer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWFrequency","preciseIdentifier":"s:8MetaWear11MWFrequencyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWThermometer","preciseIdentifier":"s:8MetaWear13MWThermometerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Source","preciseIdentifier":"s:8MetaWear13MWThermometerV6SourceO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"board"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWBoard","preciseIdentifier":"s:8MetaWear7MWBoarda"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Thermistor reports degrees Celsius."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/thermometer(rate:type:board:)","kind":"symbol","type":"topic","url":"\/documentation\/metawear\/mwpollable\/thermometer(rate:type:board:)"},"doc://MetaWear/documentation/MetaWear/MWPollable/pollSensorSignal(board:)-1dubo":{"defaultImplementations":1,"role":"symbol","title":"pollSensorSignal(board:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pollSensorSignal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"board"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MWBoard","preciseIdentifier":"s:8MetaWear7MWBoarda"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"MWDataSignal","preciseIdentifier":"s:8MetaWear12MWDataSignala"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Obtains a reference to the module’s “streamable” signal."}],"identifier":"doc:\/\/MetaWear\/documentation\/MetaWear\/MWPollable\/pollSensorSignal(board:)-1dubo","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/metawear\/mwpollable\/pollsensorsignal(board:)-1dubo"}}}